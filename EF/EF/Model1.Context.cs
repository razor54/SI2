//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Alojamento> Alojamentoes { get; set; }
        public virtual DbSet<Atividade> Atividades { get; set; }
        public virtual DbSet<ComponenteFatura> ComponenteFaturas { get; set; }
        public virtual DbSet<Estada> Estadas { get; set; }
        public virtual DbSet<EstadaAlojamento> EstadaAlojamentoes { get; set; }
        public virtual DbSet<Extra> Extras { get; set; }
        public virtual DbSet<ExtraEstada> ExtraEstadas { get; set; }
        public virtual DbSet<Fatura> Faturas { get; set; }
        public virtual DbSet<Hóspede> Hóspede { get; set; }
        public virtual DbSet<HóspedeAtividade> HóspedeAtividade { get; set; }
        public virtual DbSet<Parque> Parques { get; set; }
        public virtual DbSet<Bungalow> Bungalows { get; set; }
        public virtual DbSet<Tenda> Tendas { get; set; }
        public virtual DbSet<Bungallow> Bungallows { get; set; }
    
        public virtual int atualizarAtividade(Nullable<System.DateTime> data_atividade, Nullable<decimal> lotação, Nullable<decimal> preço, string nome_atividade, string nome_parque, string descrição)
        {
            var data_atividadeParameter = data_atividade.HasValue ?
                new ObjectParameter("data_atividade", data_atividade) :
                new ObjectParameter("data_atividade", typeof(System.DateTime));
    
            var lotaçãoParameter = lotação.HasValue ?
                new ObjectParameter("lotação", lotação) :
                new ObjectParameter("lotação", typeof(decimal));
    
            var preçoParameter = preço.HasValue ?
                new ObjectParameter("preço", preço) :
                new ObjectParameter("preço", typeof(decimal));
    
            var nome_atividadeParameter = nome_atividade != null ?
                new ObjectParameter("nome_atividade", nome_atividade) :
                new ObjectParameter("nome_atividade", typeof(string));
    
            var nome_parqueParameter = nome_parque != null ?
                new ObjectParameter("nome_parque", nome_parque) :
                new ObjectParameter("nome_parque", typeof(string));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("atualizarAtividade", data_atividadeParameter, lotaçãoParameter, preçoParameter, nome_atividadeParameter, nome_parqueParameter, descriçãoParameter);
        }
    
        public virtual int atualizarBungalowNumParque(Nullable<decimal> preço_base, string descrição, string localização, string nome, Nullable<decimal> max_pessoas, string tipologia)
        {
            var preço_baseParameter = preço_base.HasValue ?
                new ObjectParameter("preço_base", preço_base) :
                new ObjectParameter("preço_base", typeof(decimal));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            var localizaçãoParameter = localização != null ?
                new ObjectParameter("localização", localização) :
                new ObjectParameter("localização", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var max_pessoasParameter = max_pessoas.HasValue ?
                new ObjectParameter("max_pessoas", max_pessoas) :
                new ObjectParameter("max_pessoas", typeof(decimal));
    
            var tipologiaParameter = tipologia != null ?
                new ObjectParameter("tipologia", tipologia) :
                new ObjectParameter("tipologia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("atualizarBungalowNumParque", preço_baseParameter, descriçãoParameter, localizaçãoParameter, nomeParameter, max_pessoasParameter, tipologiaParameter);
        }
    
        public virtual int atualizarExtraDeAlojamento(Nullable<decimal> id, Nullable<decimal> id_estada, string descrição, Nullable<decimal> preço_dia, string tipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var id_estadaParameter = id_estada.HasValue ?
                new ObjectParameter("id_estada", id_estada) :
                new ObjectParameter("id_estada", typeof(decimal));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            var preço_diaParameter = preço_dia.HasValue ?
                new ObjectParameter("preço_dia", preço_dia) :
                new ObjectParameter("preço_dia", typeof(decimal));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("atualizarExtraDeAlojamento", idParameter, id_estadaParameter, descriçãoParameter, preço_diaParameter, tipoParameter);
        }
    
        public virtual int atualizarExtraPessoal(Nullable<decimal> id, Nullable<decimal> id_estada, string descrição, Nullable<decimal> preço_dia, string tipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var id_estadaParameter = id_estada.HasValue ?
                new ObjectParameter("id_estada", id_estada) :
                new ObjectParameter("id_estada", typeof(decimal));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            var preço_diaParameter = preço_dia.HasValue ?
                new ObjectParameter("preço_dia", preço_dia) :
                new ObjectParameter("preço_dia", typeof(decimal));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("atualizarExtraPessoal", idParameter, id_estadaParameter, descriçãoParameter, preço_diaParameter, tipoParameter);
        }
    
        public virtual int atualizarHóspede(Nullable<decimal> nif, Nullable<decimal> bi, string nome, string morada, string email)
        {
            var nifParameter = nif.HasValue ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(decimal));
    
            var biParameter = bi.HasValue ?
                new ObjectParameter("bi", bi) :
                new ObjectParameter("bi", typeof(decimal));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("atualizarHóspede", nifParameter, biParameter, nomeParameter, moradaParameter, emailParameter);
        }
    
        public virtual int atualizarTendaNumParque(Nullable<decimal> preço_base, string descrição, string localização, string nome, Nullable<decimal> max_pessoas, string tipo, Nullable<decimal> área)
        {
            var preço_baseParameter = preço_base.HasValue ?
                new ObjectParameter("preço_base", preço_base) :
                new ObjectParameter("preço_base", typeof(decimal));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            var localizaçãoParameter = localização != null ?
                new ObjectParameter("localização", localização) :
                new ObjectParameter("localização", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var max_pessoasParameter = max_pessoas.HasValue ?
                new ObjectParameter("max_pessoas", max_pessoas) :
                new ObjectParameter("max_pessoas", typeof(decimal));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var áreaParameter = área.HasValue ?
                new ObjectParameter("área", área) :
                new ObjectParameter("área", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("atualizarTendaNumParque", preço_baseParameter, descriçãoParameter, localizaçãoParameter, nomeParameter, max_pessoasParameter, tipoParameter, áreaParameter);
        }
    
        public virtual int criarEstadaParaUmPeríodoDeTempo(Nullable<decimal> id, Nullable<System.DateTime> data_início, Nullable<System.DateTime> data_fim, Nullable<decimal> nif_hóspede, Nullable<decimal> bi, string nome_hóspede, string morada, string email, Nullable<decimal> preço_base, string descrição_alojamento, string localização, string nome_alojamento, Nullable<decimal> max_pessoas, string nome_parque, string tipologia, Nullable<decimal> id_extra_alojamento, string descrição_extra_alojamento, Nullable<decimal> preço_extra_alojamento, string tipo_extra, Nullable<decimal> id_fatura, Nullable<decimal> id_extra_pessoal, string descrição_extra_pessoal, Nullable<decimal> preço_extra_pessoal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var data_inícioParameter = data_início.HasValue ?
                new ObjectParameter("data_início", data_início) :
                new ObjectParameter("data_início", typeof(System.DateTime));
    
            var data_fimParameter = data_fim.HasValue ?
                new ObjectParameter("data_fim", data_fim) :
                new ObjectParameter("data_fim", typeof(System.DateTime));
    
            var nif_hóspedeParameter = nif_hóspede.HasValue ?
                new ObjectParameter("nif_hóspede", nif_hóspede) :
                new ObjectParameter("nif_hóspede", typeof(decimal));
    
            var biParameter = bi.HasValue ?
                new ObjectParameter("bi", bi) :
                new ObjectParameter("bi", typeof(decimal));
    
            var nome_hóspedeParameter = nome_hóspede != null ?
                new ObjectParameter("nome_hóspede", nome_hóspede) :
                new ObjectParameter("nome_hóspede", typeof(string));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var preço_baseParameter = preço_base.HasValue ?
                new ObjectParameter("preço_base", preço_base) :
                new ObjectParameter("preço_base", typeof(decimal));
    
            var descrição_alojamentoParameter = descrição_alojamento != null ?
                new ObjectParameter("descrição_alojamento", descrição_alojamento) :
                new ObjectParameter("descrição_alojamento", typeof(string));
    
            var localizaçãoParameter = localização != null ?
                new ObjectParameter("localização", localização) :
                new ObjectParameter("localização", typeof(string));
    
            var nome_alojamentoParameter = nome_alojamento != null ?
                new ObjectParameter("nome_alojamento", nome_alojamento) :
                new ObjectParameter("nome_alojamento", typeof(string));
    
            var max_pessoasParameter = max_pessoas.HasValue ?
                new ObjectParameter("max_pessoas", max_pessoas) :
                new ObjectParameter("max_pessoas", typeof(decimal));
    
            var nome_parqueParameter = nome_parque != null ?
                new ObjectParameter("nome_parque", nome_parque) :
                new ObjectParameter("nome_parque", typeof(string));
    
            var tipologiaParameter = tipologia != null ?
                new ObjectParameter("tipologia", tipologia) :
                new ObjectParameter("tipologia", typeof(string));
    
            var id_extra_alojamentoParameter = id_extra_alojamento.HasValue ?
                new ObjectParameter("id_extra_alojamento", id_extra_alojamento) :
                new ObjectParameter("id_extra_alojamento", typeof(decimal));
    
            var descrição_extra_alojamentoParameter = descrição_extra_alojamento != null ?
                new ObjectParameter("descrição_extra_alojamento", descrição_extra_alojamento) :
                new ObjectParameter("descrição_extra_alojamento", typeof(string));
    
            var preço_extra_alojamentoParameter = preço_extra_alojamento.HasValue ?
                new ObjectParameter("preço_extra_alojamento", preço_extra_alojamento) :
                new ObjectParameter("preço_extra_alojamento", typeof(decimal));
    
            var tipo_extraParameter = tipo_extra != null ?
                new ObjectParameter("tipo_extra", tipo_extra) :
                new ObjectParameter("tipo_extra", typeof(string));
    
            var id_faturaParameter = id_fatura.HasValue ?
                new ObjectParameter("id_fatura", id_fatura) :
                new ObjectParameter("id_fatura", typeof(decimal));
    
            var id_extra_pessoalParameter = id_extra_pessoal.HasValue ?
                new ObjectParameter("id_extra_pessoal", id_extra_pessoal) :
                new ObjectParameter("id_extra_pessoal", typeof(decimal));
    
            var descrição_extra_pessoalParameter = descrição_extra_pessoal != null ?
                new ObjectParameter("descrição_extra_pessoal", descrição_extra_pessoal) :
                new ObjectParameter("descrição_extra_pessoal", typeof(string));
    
            var preço_extra_pessoalParameter = preço_extra_pessoal.HasValue ?
                new ObjectParameter("preço_extra_pessoal", preço_extra_pessoal) :
                new ObjectParameter("preço_extra_pessoal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("criarEstadaParaUmPeríodoDeTempo", idParameter, data_inícioParameter, data_fimParameter, nif_hóspedeParameter, biParameter, nome_hóspedeParameter, moradaParameter, emailParameter, preço_baseParameter, descrição_alojamentoParameter, localizaçãoParameter, nome_alojamentoParameter, max_pessoasParameter, nome_parqueParameter, tipologiaParameter, id_extra_alojamentoParameter, descrição_extra_alojamentoParameter, preço_extra_alojamentoParameter, tipo_extraParameter, id_faturaParameter, id_extra_pessoalParameter, descrição_extra_pessoalParameter, preço_extra_pessoalParameter);
        }
    
        public virtual int enviarEmail(Nullable<decimal> nif_hóspede, string mensagem)
        {
            var nif_hóspedeParameter = nif_hóspede.HasValue ?
                new ObjectParameter("nif_hóspede", nif_hóspede) :
                new ObjectParameter("nif_hóspede", typeof(decimal));
    
            var mensagemParameter = mensagem != null ?
                new ObjectParameter("mensagem", mensagem) :
                new ObjectParameter("mensagem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("enviarEmail", nif_hóspedeParameter, mensagemParameter);
        }
    
        public virtual ObjectResult<enviarEmailsNumIntervaloTemporal_Result> enviarEmailsNumIntervaloTemporal(Nullable<decimal> dias)
        {
            var diasParameter = dias.HasValue ?
                new ObjectParameter("dias", dias) :
                new ObjectParameter("dias", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<enviarEmailsNumIntervaloTemporal_Result>("enviarEmailsNumIntervaloTemporal", diasParameter);
        }
    
        public virtual int inscreverHóspedeNumaAtividade(Nullable<decimal> nif_hóspede, string nome_atividade, string nome_parque)
        {
            var nif_hóspedeParameter = nif_hóspede.HasValue ?
                new ObjectParameter("nif_hóspede", nif_hóspede) :
                new ObjectParameter("nif_hóspede", typeof(decimal));
    
            var nome_atividadeParameter = nome_atividade != null ?
                new ObjectParameter("nome_atividade", nome_atividade) :
                new ObjectParameter("nome_atividade", typeof(string));
    
            var nome_parqueParameter = nome_parque != null ?
                new ObjectParameter("nome_parque", nome_parque) :
                new ObjectParameter("nome_parque", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inscreverHóspedeNumaAtividade", nif_hóspedeParameter, nome_atividadeParameter, nome_parqueParameter);
        }
    
        public virtual int inserirAtividade(Nullable<System.DateTime> data_atividade, Nullable<decimal> lotação, Nullable<decimal> preço, string nome_atividade, string nome_parque, string descrição)
        {
            var data_atividadeParameter = data_atividade.HasValue ?
                new ObjectParameter("data_atividade", data_atividade) :
                new ObjectParameter("data_atividade", typeof(System.DateTime));
    
            var lotaçãoParameter = lotação.HasValue ?
                new ObjectParameter("lotação", lotação) :
                new ObjectParameter("lotação", typeof(decimal));
    
            var preçoParameter = preço.HasValue ?
                new ObjectParameter("preço", preço) :
                new ObjectParameter("preço", typeof(decimal));
    
            var nome_atividadeParameter = nome_atividade != null ?
                new ObjectParameter("nome_atividade", nome_atividade) :
                new ObjectParameter("nome_atividade", typeof(string));
    
            var nome_parqueParameter = nome_parque != null ?
                new ObjectParameter("nome_parque", nome_parque) :
                new ObjectParameter("nome_parque", typeof(string));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirAtividade", data_atividadeParameter, lotaçãoParameter, preçoParameter, nome_atividadeParameter, nome_parqueParameter, descriçãoParameter);
        }
    
        public virtual int inserirBungalowNumParque(Nullable<decimal> preço_base, string descrição, string localização, string nome, Nullable<decimal> max_pessoas, string nome_parque, string tipologia, Nullable<decimal> id_fatura)
        {
            var preço_baseParameter = preço_base.HasValue ?
                new ObjectParameter("preço_base", preço_base) :
                new ObjectParameter("preço_base", typeof(decimal));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            var localizaçãoParameter = localização != null ?
                new ObjectParameter("localização", localização) :
                new ObjectParameter("localização", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var max_pessoasParameter = max_pessoas.HasValue ?
                new ObjectParameter("max_pessoas", max_pessoas) :
                new ObjectParameter("max_pessoas", typeof(decimal));
    
            var nome_parqueParameter = nome_parque != null ?
                new ObjectParameter("nome_parque", nome_parque) :
                new ObjectParameter("nome_parque", typeof(string));
    
            var tipologiaParameter = tipologia != null ?
                new ObjectParameter("tipologia", tipologia) :
                new ObjectParameter("tipologia", typeof(string));
    
            var id_faturaParameter = id_fatura.HasValue ?
                new ObjectParameter("id_fatura", id_fatura) :
                new ObjectParameter("id_fatura", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirBungalowNumParque", preço_baseParameter, descriçãoParameter, localizaçãoParameter, nomeParameter, max_pessoasParameter, nome_parqueParameter, tipologiaParameter, id_faturaParameter);
        }
    
        public virtual int inserirEstadaComResponsávelExistente(Nullable<decimal> id, Nullable<System.DateTime> data_início, Nullable<System.DateTime> data_fim, Nullable<decimal> nif_hóspede)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var data_inícioParameter = data_início.HasValue ?
                new ObjectParameter("data_início", data_início) :
                new ObjectParameter("data_início", typeof(System.DateTime));
    
            var data_fimParameter = data_fim.HasValue ?
                new ObjectParameter("data_fim", data_fim) :
                new ObjectParameter("data_fim", typeof(System.DateTime));
    
            var nif_hóspedeParameter = nif_hóspede.HasValue ?
                new ObjectParameter("nif_hóspede", nif_hóspede) :
                new ObjectParameter("nif_hóspede", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirEstadaComResponsávelExistente", idParameter, data_inícioParameter, data_fimParameter, nif_hóspedeParameter);
        }
    
        public virtual int inserirEstadaSemResponsávelExistente(Nullable<decimal> id, Nullable<System.DateTime> data_início, Nullable<System.DateTime> data_fim, Nullable<decimal> nif_hóspede, Nullable<decimal> bi, string nome, string morada, string email)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var data_inícioParameter = data_início.HasValue ?
                new ObjectParameter("data_início", data_início) :
                new ObjectParameter("data_início", typeof(System.DateTime));
    
            var data_fimParameter = data_fim.HasValue ?
                new ObjectParameter("data_fim", data_fim) :
                new ObjectParameter("data_fim", typeof(System.DateTime));
    
            var nif_hóspedeParameter = nif_hóspede.HasValue ?
                new ObjectParameter("nif_hóspede", nif_hóspede) :
                new ObjectParameter("nif_hóspede", typeof(decimal));
    
            var biParameter = bi.HasValue ?
                new ObjectParameter("bi", bi) :
                new ObjectParameter("bi", typeof(decimal));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirEstadaSemResponsávelExistente", idParameter, data_inícioParameter, data_fimParameter, nif_hóspedeParameter, biParameter, nomeParameter, moradaParameter, emailParameter);
        }
    
        public virtual int inserirExtraDeAlojamento(Nullable<decimal> id, Nullable<decimal> id_estada, string descrição, Nullable<decimal> preço_dia, string tipo, Nullable<decimal> id_fatura)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var id_estadaParameter = id_estada.HasValue ?
                new ObjectParameter("id_estada", id_estada) :
                new ObjectParameter("id_estada", typeof(decimal));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            var preço_diaParameter = preço_dia.HasValue ?
                new ObjectParameter("preço_dia", preço_dia) :
                new ObjectParameter("preço_dia", typeof(decimal));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var id_faturaParameter = id_fatura.HasValue ?
                new ObjectParameter("id_fatura", id_fatura) :
                new ObjectParameter("id_fatura", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirExtraDeAlojamento", idParameter, id_estadaParameter, descriçãoParameter, preço_diaParameter, tipoParameter, id_faturaParameter);
        }
    
        public virtual int inserirExtraPessoal(Nullable<decimal> id, Nullable<decimal> id_estada, string descrição, Nullable<decimal> preço_dia, string tipo, Nullable<decimal> id_fatura)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var id_estadaParameter = id_estada.HasValue ?
                new ObjectParameter("id_estada", id_estada) :
                new ObjectParameter("id_estada", typeof(decimal));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            var preço_diaParameter = preço_dia.HasValue ?
                new ObjectParameter("preço_dia", preço_dia) :
                new ObjectParameter("preço_dia", typeof(decimal));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var id_faturaParameter = id_fatura.HasValue ?
                new ObjectParameter("id_fatura", id_fatura) :
                new ObjectParameter("id_fatura", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirExtraPessoal", idParameter, id_estadaParameter, descriçãoParameter, preço_diaParameter, tipoParameter, id_faturaParameter);
        }
    
        public virtual int inserirHóspedeComEstadaExistente(Nullable<decimal> nif, Nullable<decimal> bi, string nome, string morada, string email, Nullable<decimal> id_estada)
        {
            var nifParameter = nif.HasValue ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(decimal));
    
            var biParameter = bi.HasValue ?
                new ObjectParameter("bi", bi) :
                new ObjectParameter("bi", typeof(decimal));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var moradaParameter = morada != null ?
                new ObjectParameter("morada", morada) :
                new ObjectParameter("morada", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var id_estadaParameter = id_estada.HasValue ?
                new ObjectParameter("id_estada", id_estada) :
                new ObjectParameter("id_estada", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirHóspedeComEstadaExistente", nifParameter, biParameter, nomeParameter, moradaParameter, emailParameter, id_estadaParameter);
        }
    
        public virtual int inserirTendaNumParque(Nullable<decimal> preço_base, string descrição, string localização, string nome, Nullable<decimal> max_pessoas, string nome_parque, string tipo, Nullable<decimal> área, Nullable<decimal> id_fatura)
        {
            var preço_baseParameter = preço_base.HasValue ?
                new ObjectParameter("preço_base", preço_base) :
                new ObjectParameter("preço_base", typeof(decimal));
    
            var descriçãoParameter = descrição != null ?
                new ObjectParameter("descrição", descrição) :
                new ObjectParameter("descrição", typeof(string));
    
            var localizaçãoParameter = localização != null ?
                new ObjectParameter("localização", localização) :
                new ObjectParameter("localização", typeof(string));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var max_pessoasParameter = max_pessoas.HasValue ?
                new ObjectParameter("max_pessoas", max_pessoas) :
                new ObjectParameter("max_pessoas", typeof(decimal));
    
            var nome_parqueParameter = nome_parque != null ?
                new ObjectParameter("nome_parque", nome_parque) :
                new ObjectParameter("nome_parque", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var áreaParameter = área.HasValue ?
                new ObjectParameter("área", área) :
                new ObjectParameter("área", typeof(decimal));
    
            var id_faturaParameter = id_fatura.HasValue ?
                new ObjectParameter("id_fatura", id_fatura) :
                new ObjectParameter("id_fatura", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirTendaNumParque", preço_baseParameter, descriçãoParameter, localizaçãoParameter, nomeParameter, max_pessoasParameter, nome_parqueParameter, tipoParameter, áreaParameter, id_faturaParameter);
        }
    
        public virtual ObjectResult<listarAtividadesComlugares_Result> listarAtividadesComlugares(Nullable<System.DateTime> dataInit, Nullable<System.DateTime> dataFim)
        {
            var dataInitParameter = dataInit.HasValue ?
                new ObjectParameter("dataInit", dataInit) :
                new ObjectParameter("dataInit", typeof(System.DateTime));
    
            var dataFimParameter = dataFim.HasValue ?
                new ObjectParameter("dataFim", dataFim) :
                new ObjectParameter("dataFim", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listarAtividadesComlugares_Result>("listarAtividadesComlugares", dataInitParameter, dataFimParameter);
        }
    
        public virtual int mediaDosPreçosDasFaturas(Nullable<decimal> year, Nullable<int> low, Nullable<int> top)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(decimal));
    
            var lowParameter = low.HasValue ?
                new ObjectParameter("low", low) :
                new ObjectParameter("low", typeof(int));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mediaDosPreçosDasFaturas", yearParameter, lowParameter, topParameter);
        }
    
        public virtual int pagamentoEstadaComFatura(Nullable<decimal> id_estada, ObjectParameter total)
        {
            var id_estadaParameter = id_estada.HasValue ?
                new ObjectParameter("id_estada", id_estada) :
                new ObjectParameter("id_estada", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pagamentoEstadaComFatura", id_estadaParameter, total);
        }
    
        public virtual int removerAtividade(string nome_atividade, string nome_parque)
        {
            var nome_atividadeParameter = nome_atividade != null ?
                new ObjectParameter("nome_atividade", nome_atividade) :
                new ObjectParameter("nome_atividade", typeof(string));
    
            var nome_parqueParameter = nome_parque != null ?
                new ObjectParameter("nome_parque", nome_parque) :
                new ObjectParameter("nome_parque", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("removerAtividade", nome_atividadeParameter, nome_parqueParameter);
        }
    
        public virtual int removerBungalowNumParque(string nome)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("removerBungalowNumParque", nomeParameter);
        }
    
        public virtual int removerExtraDeAlojamento(Nullable<decimal> id, Nullable<decimal> id_fatura)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var id_faturaParameter = id_fatura.HasValue ?
                new ObjectParameter("id_fatura", id_fatura) :
                new ObjectParameter("id_fatura", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("removerExtraDeAlojamento", idParameter, id_faturaParameter);
        }
    
        public virtual int removerExtraPessoal(Nullable<decimal> id, Nullable<decimal> id_fatura)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var id_faturaParameter = id_fatura.HasValue ?
                new ObjectParameter("id_fatura", id_fatura) :
                new ObjectParameter("id_fatura", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("removerExtraPessoal", idParameter, id_faturaParameter);
        }
    
        public virtual int removerHóspede(Nullable<decimal> nif)
        {
            var nifParameter = nif.HasValue ?
                new ObjectParameter("nif", nif) :
                new ObjectParameter("nif", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("removerHóspede", nifParameter);
        }
    
        public virtual int removerTendaNumParque(string nome)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("removerTendaNumParque", nomeParameter);
        }
    }
}
